%{
#include "output.hpp"
#include "iostream"
using namespace output;
%}

%nonassoc VOID
%nonassoc INT
%nonassoc BYTE
%nonassoc B
%nonassoc BOOL
%right ASSIGN

%left OR
%left AND
%left LP_RELOP
%left HP_RELOP
%left LP_BINOP
%left HP_BINOP
%right NOT
%nonassoc TRUE
%nonassoc FALSE
%nonassoc RETURN
%nonassoc IF
%nonassoc WHILE
%nonassoc BREAK
%nonassoc CONTINUE
%nonassoc SC
%nonassoc COMMA
%nonassoc LPAREN
%right RPAREN
%nonassoc LBRACE
%nonassoc RBRACE
%nonassoc ELSE
%nonassoc ID
%nonassoc NUM
%nonassoc STRING


%%


Program : Statements {printProductionRule(1);}

Statements : Statement {printProductionRule(2);}
           | Statements Statement {printProductionRule(3);}

Statement : LBRACE Statements RBRACE {printProductionRule(4);}
          | Type ID SC {printProductionRule(5);}
          | Type ID ASSIGN Exp SC {printProductionRule(6);}
          | ID ASSIGN Exp SC {printProductionRule(7);}
          | Call SC {printProductionRule(8);}
          | Return SC {printProductionRule(9);}
          | IF LPAREN Exp RPAREN Statement {printProductionRule(10);}
          | IF LPAREN Exp RPAREN Statement ELSE Statement {printProductionRule(11);}
          | WHILE LPAREN Exp RPAREN Statement {printProductionRule(12);}
          | BREAK SC {printProductionRule(13);}
          | CONTINUE SC {printProductionRule(14);}

Call: ID LPAREN Exp RPAREN {printProductionRule(15);}

Type: INT {printProductionRule(16);}
    | BYTE {printProductionRule(17);}
    | BOOL {printProductionRule(18);}

Exp: LPAREN Exp RPAREN {printProductionRule(19);}
    | Exp HP_BINOP Exp {printProductionRule(20);}
    | Exp LP_BINOP Exp {printProductionRule(20);}
    | ID {printProductionRule(21);}
    | Call {printProductionRule(22);}
    | NUM {printProductionRule(23);}
    | NUM B {printProductionRule(24);}
    | STRING {printProductionRule(25);}
    | TRUE {printProductionRule(26);}
    | FALSE {printProductionRule(27);}
    | NOT Exp {printProductionRule(28);}
    | Exp AND Exp {printProductionRule(29);}
    | Exp OR Exp {printProductionRule(30);}
    | Exp HP_RELOP Exp {printProductionRule(31);}
    | Exp LP_RELOP Exp {printProductionRule(31);}
    | LPAREN Type RPAREN Exp {printProductionRule(32);}

